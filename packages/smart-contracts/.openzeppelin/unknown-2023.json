{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xd66df7B4Cf45588320743A139614dA96AE3a3D9F",
      "txHash": "0xcfab21903770f1915b609a84c019bb6f0ccf94bf813b7aaadeda1853bbe8d474",
      "kind": "uups"
    },
    {
      "address": "0xD92D6D06f52693EF748E2d5F4Ac8F1Dee8F9116F",
      "txHash": "0x00bd56819d8dd50044fcd6bcaeb8ee43a958ee96a909c8ff4fbfb539b5564a88",
      "kind": "uups"
    },
    {
      "address": "0x730c806c7150B5B93bDD0EAa3fAb7E736F6c72fD",
      "txHash": "0x3bcd0e7430d1c463e430098ea96f35b6a9ba0c20342f93c39138fce805536c23",
      "kind": "uups"
    },
    {
      "address": "0x692A3C95b6Dccda05a9d9Ae3D383889e9CD8b331",
      "txHash": "0x8801e9a64040c302f448e886fd35f479c3c3373691b0a45d9d54e122aa544c15",
      "kind": "uups"
    },
    {
      "address": "0x8c2ABf5c3498FaC684eE1a13bDaE8F11341E9E7d",
      "txHash": "0x6be851ba8e3d5eeac17546aade8ea9c7ed623281ad23f80d4ae976ebdfbdfd9a",
      "kind": "uups"
    },
    {
      "address": "0x04Fe84DcA9014e673B22D46e420ddd7429767e03",
      "txHash": "0xd4beff6710a40d9a432c449ef1d90a5e7b2d0b4b9f597a136fbb8e6c38e5338d",
      "kind": "uups"
    },
    {
      "address": "0x0f4A72d9AA4e8f2aFc8219Ca40e3bCdbf66Db767",
      "txHash": "0xb507277e6d7158bc4d9175d694d2f6cd3e87f4f3047e027dcd45ced2fd2dd1f5",
      "kind": "uups"
    },
    {
      "address": "0xEE0Aaf8e9d5Db7E87aa91eE7046CBb612027dC73",
      "txHash": "0x5a02d29246749dc53202b4ab1faad24a506d7d4f4e92af238b1ed610724379b5",
      "kind": "uups"
    },
    {
      "address": "0x5b2F70D41b4cDFAd0f896Db462110cA60b865B23",
      "txHash": "0xf372877f347784c3bad8ef1f0e4809a16947784c625a84f4d6e9a082c2258d6e",
      "kind": "uups"
    }
  ],
  "impls": {
    "682adf42f0e1667c734153d82c5e7116d362db483ba71a6e0741f63de930032c": {
      "address": "0x4690E5ADf81ba4d44b5723de5d9E1f1b4c40CF32",
      "txHash": "0x3e96420fff22dc951aeb2708e0b593a9f8bf86615d867933dbcd2bc0572216df",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "currentId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "CustomerManagementStorage",
            "src": "contracts/storage/CustomerManagementStorage.sol:8"
          },
          {
            "label": "clientMappingStorage",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint256,t_struct(ClientData)5086_storage)",
            "contract": "CustomerManagementStorage",
            "src": "contracts/storage/CustomerManagementStorage.sol:10"
          },
          {
            "label": "clientsByName",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)dyn_storage)",
            "contract": "CustomerManagementStorage",
            "src": "contracts/storage/CustomerManagementStorage.sol:11"
          },
          {
            "label": "clientsByAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "CustomerManagementStorage",
            "src": "contracts/storage/CustomerManagementStorage.sol:12"
          },
          {
            "label": "clientsByAge",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "CustomerManagementStorage",
            "src": "contracts/storage/CustomerManagementStorage.sol:13"
          },
          {
            "label": "walletAddressExists",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CustomerManagementStorage",
            "src": "contracts/storage/CustomerManagementStorage.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)45_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_enum(PaymentStatus)5062": {
            "label": "enum ICustomerManagementStorage.PaymentStatus",
            "members": [
              "NOT_PAID",
              "PAID"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(string => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ClientData)5086_storage)": {
            "label": "mapping(uint256 => struct ICustomerManagementStorage.ClientData)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressLocal)5071_storage": {
            "label": "struct ICustomerManagementStorage.AddressLocal",
            "members": [
              {
                "label": "City",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "Street",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "PostalCode",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "HouseNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ClientData)5086_storage": {
            "label": "struct ICustomerManagementStorage.ClientData",
            "members": [
              {
                "label": "clientId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "age",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "WalletAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "paymentStatus",
                "type": "t_enum(PaymentStatus)5062",
                "offset": 20,
                "slot": "3"
              },
              {
                "label": "addressLocal",
                "type": "t_struct(AddressLocal)5071_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "fff93370516df31762f38fc37ed768e460c9449995455fa62274d64e9c28c95e": {
      "address": "0x51ba05d7E1Bf1817B65844542Fb84635225Bd1E9",
      "txHash": "0xb81b08fb387d1d006ac719a874c9ffd0783d44fb65db892abb6957a09b832335",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "clientLevel",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "PointStorage",
            "src": "contracts/storage/PointStorage.sol:6"
          },
          {
            "label": "clientPoints",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "PointStorage",
            "src": "contracts/storage/PointStorage.sol:7"
          },
          {
            "label": "currentTokenID",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "BadgeToken",
            "src": "contracts/token/BadgeToken.sol:22"
          },
          {
            "label": "userTokenIDs",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BadgeToken",
            "src": "contracts/token/BadgeToken.sol:23"
          },
          {
            "label": "clientManager",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(CustomerManagementCore)4598",
            "contract": "PointCore",
            "src": "contracts/PointCore.sol:23"
          },
          {
            "label": "pointsForPremium",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "PointCore",
            "src": "contracts/PointCore.sol:25"
          },
          {
            "label": "pointsForGold",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "PointCore",
            "src": "contracts/PointCore.sol:26"
          },
          {
            "label": "pointsForTitanium",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "PointCore",
            "src": "contracts/PointCore.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC1155Storage)131_storage": {
            "label": "struct ERC1155Upgradeable.ERC1155Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_uri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(InitializableStorage)45_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(CustomerManagementCore)4598": {
            "label": "contract CustomerManagementCore",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC1155": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:29",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "8607cd8d94ebd13177d3913fa2da5fa3f9d2520d23e62faef93a7e50f8fc34b5": {
      "address": "0x822Cc21Db90472400c56DF4Ce56bC61E9f7d2548",
      "txHash": "0x132fe3d16315b968129799a42e4f0538a27a38c647f970aee2a3a1e8840fc0b2",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "clientLevel",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "PointStorage",
            "src": "contracts/storage/PointStorage.sol:6"
          },
          {
            "label": "clientPoints",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "PointStorage",
            "src": "contracts/storage/PointStorage.sol:7"
          },
          {
            "label": "currentTokenID",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "BadgeToken",
            "src": "contracts/token/BadgeToken.sol:22"
          },
          {
            "label": "userTokenIDs",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BadgeToken",
            "src": "contracts/token/BadgeToken.sol:23"
          },
          {
            "label": "customerManagerInstance",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(CustomerManagementCore)4598",
            "contract": "PointCore",
            "src": "contracts/PointCore.sol:23"
          },
          {
            "label": "pointsForPremium",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "PointCore",
            "src": "contracts/PointCore.sol:25"
          },
          {
            "label": "pointsForGold",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "PointCore",
            "src": "contracts/PointCore.sol:26"
          },
          {
            "label": "pointsForTitanium",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "PointCore",
            "src": "contracts/PointCore.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC1155Storage)131_storage": {
            "label": "struct ERC1155Upgradeable.ERC1155Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_uri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(InitializableStorage)45_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(CustomerManagementCore)4598": {
            "label": "contract CustomerManagementCore",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC1155": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:29",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "98c3f63e56d727c28203006caa09d0319227c61111eecff446a87d3ec1fecb02": {
      "address": "0x7B8285241CDBA59C4278f533b481676945109a55",
      "txHash": "0x9b21ab8ce5a57b7390241788e42e1eab227b1a17c8abd05594bee4588d02b57a",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "currentId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "CustomerManagementStorage",
            "src": "contracts/storage/CustomerManagementStorage.sol:8"
          },
          {
            "label": "clientMappingStorage",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint256,t_struct(ClientData)5514_storage)",
            "contract": "CustomerManagementStorage",
            "src": "contracts/storage/CustomerManagementStorage.sol:10"
          },
          {
            "label": "clientsByName",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)dyn_storage)",
            "contract": "CustomerManagementStorage",
            "src": "contracts/storage/CustomerManagementStorage.sol:11"
          },
          {
            "label": "clientsByAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "CustomerManagementStorage",
            "src": "contracts/storage/CustomerManagementStorage.sol:12"
          },
          {
            "label": "clientsByAge",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "CustomerManagementStorage",
            "src": "contracts/storage/CustomerManagementStorage.sol:13"
          },
          {
            "label": "walletAddressExists",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CustomerManagementStorage",
            "src": "contracts/storage/CustomerManagementStorage.sol:15"
          },
          {
            "label": "userTokenIDs",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CustomerManagementStorage",
            "src": "contracts/storage/CustomerManagementStorage.sol:17"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)45_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_enum(PaymentStatus)5490": {
            "label": "enum ICustomerManagementStorage.PaymentStatus",
            "members": [
              "NOT_PAID",
              "PAID"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(string => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ClientData)5514_storage)": {
            "label": "mapping(uint256 => struct ICustomerManagementStorage.ClientData)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressLocal)5499_storage": {
            "label": "struct ICustomerManagementStorage.AddressLocal",
            "members": [
              {
                "label": "City",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "Street",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "PostalCode",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "HouseNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ClientData)5514_storage": {
            "label": "struct ICustomerManagementStorage.ClientData",
            "members": [
              {
                "label": "clientId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "age",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "WalletAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "paymentStatus",
                "type": "t_enum(PaymentStatus)5490",
                "offset": 20,
                "slot": "3"
              },
              {
                "label": "addressLocal",
                "type": "t_struct(AddressLocal)5499_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "efa2a542992dea6089c1e1e9e1f036a9592c65d7f4248f78cedd82e7538b62d8": {
      "address": "0x1c5d486b79Ae1ed062c9aD469a11Abb3fACf769E",
      "txHash": "0x7500db9039ed9805a73bad11e45cf1b04808b0341baa31ef4f823a84d3d749ac",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "clientLevel",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "PointStorage",
            "src": "contracts/storage/PointStorage.sol:6"
          },
          {
            "label": "clientPoints",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "PointStorage",
            "src": "contracts/storage/PointStorage.sol:7"
          },
          {
            "label": "customerManagerInstance",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(CustomerManagementCore)4977",
            "contract": "PointCore",
            "src": "contracts/PointCore.sol:24"
          },
          {
            "label": "pointsForPremium",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "PointCore",
            "src": "contracts/PointCore.sol:26"
          },
          {
            "label": "pointsForGold",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "PointCore",
            "src": "contracts/PointCore.sol:27"
          },
          {
            "label": "pointsForTitanium",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "PointCore",
            "src": "contracts/PointCore.sol:28"
          },
          {
            "label": "metadataURI",
            "offset": 0,
            "slot": "6",
            "type": "t_string_storage",
            "contract": "PointCore",
            "src": "contracts/PointCore.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC1155Storage)131_storage": {
            "label": "struct ERC1155Upgradeable.ERC1155Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_uri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(InitializableStorage)45_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(CustomerManagementCore)4977": {
            "label": "contract CustomerManagementCore",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC1155": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:29",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
